{"version":3,"file":"ng-select2-component.mjs","sources":["../../../projects/ng-select2-component/src/lib/select2-const.ts","../../../projects/ng-select2-component/src/lib/select2-utils.ts","../../../projects/ng-select2-component/src/lib/select2.component.ts","../../../projects/ng-select2-component/src/lib/select2.component.html","../../../projects/ng-select2-component/src/lib/select2-hint.component.ts","../../../projects/ng-select2-component/src/lib/select2-label.component.ts","../../../projects/ng-select2-component/src/lib/select2.module.ts","../../../projects/ng-select2-component/src/public_api.ts","../../../projects/ng-select2-component/src/ng-select2-component.ts"],"sourcesContent":["export const timeout = 200;\n\nexport const unicodePatterns: { l: string; s: RegExp }[] = [\n    { l: 'a', s: /[ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ]/gi },\n    { l: 'aa', s: /ꜳ/gi },\n    { l: 'ae', s: /[æǽǣ]/gi },\n    { l: 'ao', s: /ꜵ/gi },\n    { l: 'au', s: /ꜷ/gi },\n    { l: 'av', s: /[ꜹꜻ]/gi },\n    { l: 'ay', s: /ꜽ/gi },\n    { l: 'b', s: /[ⓑｂḃḅḇƀƃɓ]/gi },\n    { l: 'c', s: /[ⓒｃćĉċčçḉƈȼꜿↄ]/gi },\n    { l: 'd', s: /[ⓓｄḋďḍḑḓḏđƌɖɗꝺ]/gi },\n    { l: 'dz', s: /[ǳǆ]/gi },\n    { l: 'e', s: /[ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ]/gi },\n    { l: 'f', s: /[ⓕｆḟƒꝼ]/gi },\n    { l: 'g', s: /[ⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ]/gi },\n    { l: 'h', s: /[ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ]/gi },\n    { l: 'hv', s: /ƕ/gi },\n    { l: 'i', s: /[ⓘｉìíîĩīĭİïḯỉǐȉȋịįḭɨı]/gi },\n    { l: 'j', s: /[ⓙｊĵǰɉ]/gi },\n    { l: 'k', s: /[ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ]/gi },\n    { l: 'l', s: /[ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇꝆ]/gi },\n    { l: 'lj', s: /ǉ/gi },\n    { l: 'm', s: /[ⓜｍḿṁṃɱɯ]/gi },\n    { l: 'n', s: /[ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ]/gi },\n    { l: 'nj', s: /ǌ/gi },\n    { l: 'o', s: /[ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔƟꝋꝍɵ]/gi },\n    { l: 'oi', s: /ƣ/gi },\n    { l: 'oe', s: /œ/gi },\n    { l: 'oo', s: /ꝏ/gi },\n    { l: 'ou', s: /ȣ/gi },\n    { l: 'p', s: /[ⓟｐṕṗƥᵽꝑꝓꝕ]/gi },\n    { l: 'q', s: /[ⓠｑɋꝗꝙ]/gi },\n    { l: 'r', s: /[ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ]/gi },\n    { l: 's', s: /[ⓢｓßẞśṥŝṡšṧṣṩșşȿꞩꞅẛ]/gi },\n    { l: 't', s: /[ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ]/gi },\n    { l: 'tz', s: /ꜩ/gi },\n    { l: 'u', s: /[ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ]/gi },\n    { l: 'v', s: /[ⓥｖṽṿʋꝟʌ]/gi },\n    { l: 'vy', s: /ꝡ/gi },\n    { l: 'w', s: /[ⓦｗẁẃŵẇẅẘẉⱳ]/gi },\n    { l: 'x', s: /[ⓧｘẋẍ]/gi },\n    { l: 'y', s: /[ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ]/gi },\n    { l: 'z', s: /[ⓩｚźẑżžẓẕƶȥɀⱬꝣ]/gi },\n];\n\nexport const defaultMinCountForSearch = 6;\n\nexport const protectRegexp = new RegExp('[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\\\^\\\\$\\\\|]', 'g');\n","import { defaultMinCountForSearch, protectRegexp, unicodePatterns } from './select2-const';\nimport { Select2Data, Select2Group, Select2Option, Select2UpdateValue, Select2Value } from './select2-interfaces';\n\nexport class Select2Utils {\n    static getOptionByValue(data: Select2Data, value: Select2Value | null | undefined) {\n        if (Array.isArray(data)) {\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    for (const option of options) {\n                        if (option.value === value) {\n                            return option;\n                        }\n                    }\n                } else if ((groupOrOption as Select2Option).value === value) {\n                    return groupOrOption as Select2Option;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    static getOptionsByValue(\n        data: Select2Data,\n        value: Select2UpdateValue | null | undefined,\n        multiple: boolean | null | undefined,\n    ) {\n        if (multiple) {\n            const values: Select2Value[] = Array.isArray(value) ? value : [];\n            const result: Select2Option[] = [];\n            for (const v of values) {\n                const option = Select2Utils.getOptionByValue(data, v);\n                if (option) {\n                    result.push(option);\n                }\n            }\n            return result;\n        }\n        return Select2Utils.getOptionByValue(data, value as Select2Value | null | undefined);\n    }\n\n    static getFirstAvailableOption(data: Select2Data) {\n        if (Array.isArray(data)) {\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    for (const option of options) {\n                        if (!option.disabled) {\n                            return option.value;\n                        }\n                    }\n                } else {\n                    const option = groupOrOption as Select2Option;\n                    if (!option.disabled) {\n                        return option.value;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    static valueIsNotInFilteredData(filteredData: Select2Data, value: Select2Value | null | undefined) {\n        if (Select2Utils.isNullOrUndefined(value)) {\n            return true;\n        }\n        for (const groupOrOption of filteredData) {\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                for (const option of options) {\n                    if (option.value === value) {\n                        return false;\n                    }\n                }\n            } else if ((groupOrOption as Select2Option).value === value) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    static getPreviousOption(filteredData: Select2Data, hoveringValue: Select2Value | null | undefined) {\n        let findIt = Select2Utils.isNullOrUndefined(hoveringValue);\n        for (let i = filteredData.length - 1; i >= 0; i--) {\n            const groupOrOption = filteredData[i];\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                for (let j = options.length - 1; j >= 0; j--) {\n                    const option = options[j];\n                    if (findIt && !option.disabled && !option.hide) {\n                        return option;\n                    }\n                    if (!findIt) {\n                        findIt = option.value === hoveringValue;\n                    }\n                }\n            } else {\n                const option = groupOrOption as Select2Option;\n                if (findIt && !option.disabled && !option.hide) {\n                    return option;\n                }\n                if (!findIt) {\n                    findIt = option.value === hoveringValue;\n                }\n            }\n        }\n        return null;\n    }\n\n    static getNextOption(filteredData: Select2Data, hoveringValue: Select2Value | null | undefined) {\n        let findIt = Select2Utils.isNullOrUndefined(hoveringValue);\n        for (const groupOrOption of filteredData) {\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                for (const option of options) {\n                    if (findIt) {\n                        if (!option.disabled && !option.hide) {\n                            return option;\n                        }\n                    } else if (!findIt) {\n                        findIt = option.value === hoveringValue;\n                    }\n                }\n            } else {\n                const option = groupOrOption as Select2Option;\n                if (findIt) {\n                    if (!option.disabled && !option.hide) {\n                        return option;\n                    }\n                } else if (!findIt) {\n                    findIt = option.value === hoveringValue;\n                }\n            }\n        }\n        return null;\n    }\n\n    static getReduceData(data: Select2Data, maxResults = 0): { result: Select2Data; reduce: boolean } {\n        if (maxResults > 0) {\n            let counter = 0;\n            const result: Select2Data = [];\n            // debugger;\n\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    const group = {\n                        ...groupOrOption,\n                        options: [],\n                    };\n                    result.push(group);\n                    for (const item of options) {\n                        group.options.push(item);\n                        counter++;\n                        if (counter === maxResults) {\n                            return { result, reduce: true };\n                        }\n                    }\n                } else {\n                    result.push(groupOrOption);\n                    counter++;\n                }\n                if (counter === maxResults) {\n                    return { result, reduce: true };\n                }\n            }\n            return { result, reduce: false };\n        } else {\n            return { result: data, reduce: false };\n        }\n    }\n\n    static getFilteredData(\n        data: Select2Data,\n        searchText: string | null,\n        editPattern?: (str: string) => string,\n    ): Select2Data {\n        if (searchText) {\n            const result: Select2Data = [];\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    if (options.some(group => Select2Utils.containSearchText(group.label, searchText, editPattern))) {\n                        const filteredOptions = options.filter(group =>\n                            Select2Utils.containSearchText(group.label, searchText, editPattern),\n                        );\n                        result.push({\n                            ...groupOrOption,\n                            options: filteredOptions,\n                        });\n                    }\n                } else if (Select2Utils.containSearchText(groupOrOption.label, searchText, editPattern)) {\n                    result.push(groupOrOption);\n                }\n            }\n            return result;\n        } else {\n            return data;\n        }\n    }\n\n    static getFilteredSelectedData(\n        data: Select2Data,\n        selectedOptions: Select2Option | Select2Option[] | null,\n    ): Select2Data {\n        const result: Select2Data = [];\n        for (const groupOrOption of data) {\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                const filteredOptions = options.filter(\n                    group => Select2Utils.isSelected(selectedOptions, group, true) === 'false',\n                );\n                if (filteredOptions.length) {\n                    result.push({\n                        ...groupOrOption,\n                        options: filteredOptions,\n                    });\n                }\n            } else if (Select2Utils.isSelected(selectedOptions, groupOrOption as Select2Option, true) === 'false') {\n                result.push(groupOrOption);\n            }\n        }\n        return result;\n    }\n\n    static isSearchboxHiddex(data: Select2Data, minCountForSearch?: number | string): boolean {\n        if (\n            minCountForSearch === '' ||\n            minCountForSearch === undefined ||\n            minCountForSearch === null ||\n            isNaN(+minCountForSearch)\n        ) {\n            minCountForSearch = defaultMinCountForSearch;\n        }\n        const optionCount = Select2Utils.getOptionsCount(data);\n        return optionCount < +minCountForSearch;\n    }\n\n    static isSelected(\n        options: Select2Option | Select2Option[] | null,\n        option: Select2Option,\n        multiple: boolean | null | undefined,\n    ) {\n        return multiple\n            ? options && (options as Select2Option[]).some(op => op.value === option.value)\n                ? 'true'\n                : 'false'\n            : options && option.value === (options as Select2Option).value\n              ? 'true'\n              : 'false';\n    }\n\n    static removeSelection(options: Select2Option | Select2Option[] | null, option: Select2Option) {\n        for (let i = 0; i < (options as Select2Option[]).length; i++) {\n            if ((options as Select2Option[])[i].value === option.value) {\n                (options as Select2Option[]).splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    private static getOptionsCount(data: Select2Data) {\n        let count = 0;\n        if (Array.isArray(data)) {\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                count += options ? options.length : 1;\n            }\n        }\n        return count;\n    }\n\n    private static isNullOrUndefined(value: any) {\n        return value === null || value === undefined;\n    }\n\n    private static containSearchText(\n        label: string,\n        searchText: string | null,\n        editPattern: ((str: string) => string) | undefined,\n    ): boolean {\n        return searchText\n            ? Select2Utils.formatSansUnicode(label).match(\n                  new RegExp(Select2Utils.formatPattern(searchText, editPattern), 'i'),\n              ) !== null\n            : true;\n    }\n\n    private static protectPattern(str: string): string {\n        return str.replace(protectRegexp, '\\\\$&');\n    }\n\n    private static formatSansUnicode(str: string): string {\n        for (const unicodePattern of unicodePatterns) {\n            str = str.replace(unicodePattern.s, unicodePattern.l);\n        }\n        return str;\n    }\n\n    private static formatPattern(str: string, editPattern: ((str: string) => string) | undefined): string {\n        str = Select2Utils.formatSansUnicode(Select2Utils.protectPattern(str));\n\n        if (editPattern && typeof editPattern === 'function') {\n            str = editPattern(str);\n        }\n        return str;\n    }\n}\n","import {\n    CdkConnectedOverlay,\n    ConnectedOverlayPositionChange,\n    ConnectedPosition,\n    VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport type { ElementRef, QueryList } from '@angular/core';\nimport {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectorRef,\n    Component,\n    DoCheck,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnInit,\n    Optional,\n    Output,\n    Self,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n    booleanAttribute,\n    numberAttribute,\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\n\nimport { Subject } from 'rxjs';\n\nimport {\n    Select2AutoCreateEvent,\n    Select2Data,\n    Select2Group,\n    Select2Option,\n    Select2RemoveEvent,\n    Select2ScrollEvent,\n    Select2SearchEvent,\n    Select2UpdateEvent,\n    Select2UpdateValue,\n    Select2Value,\n} from './select2-interfaces';\nimport { Select2Utils } from './select2-utils';\n\nlet nextUniqueId = 0;\n\nconst displaySearchStatusList = ['default', 'hidden', 'always'];\n\n@Component({\n    selector: 'select2',\n    templateUrl: './select2.component.html',\n    styleUrls: ['./select2.component.scss'],\n})\nexport class Select2 implements ControlValueAccessor, OnInit, DoCheck, AfterViewInit {\n    _data: Select2Data;\n\n    /** data of options & optiongrps */\n    @Input({ required: true }) set data(data: Select2Data) {\n        this._data = data;\n        this.updateFilteredData(true);\n    }\n    @Input({ transform: numberAttribute }) minCharForSearch = 0;\n    @Input() displaySearchStatus: 'default' | 'hidden' | 'always';\n    @Input() placeholder: string;\n\n    @Input({ transform: numberAttribute }) limitSelection = 0;\n    @Input() listPosition: 'above' | 'below' | 'auto' = 'below';\n\n    @Input({ transform: booleanAttribute })\n    get multiple(): boolean {\n        return this._multiple;\n    }\n    set multiple(value: boolean) {\n        this._multiple = value;\n        this.ngOnInit();\n    }\n\n    /** use the material style */\n    @Input({ transform: booleanAttribute })\n    overlay = false;\n\n    /** use the material style */\n    @Input() styleMode: 'material' | 'noStyle' | 'borderless' | 'default' = 'default';\n\n    /** message when no result */\n    @Input() noResultMessage: string;\n\n    /** maximum results limit (0 = no limit) */\n    @Input({ transform: numberAttribute }) maxResults = 0;\n\n    /** message when maximum results */\n    @Input() maxResultsMessage = 'Too many results…';\n\n    /** infinite scroll distance */\n    @Input({ transform: numberAttribute }) infiniteScrollDistance = 1.5;\n\n    /** infinite scroll distance */\n    @Input({ transform: numberAttribute }) infiniteScrollThrottle = 150;\n\n    /** infinite scroll activated */\n    @Input({ transform: booleanAttribute }) infiniteScroll = false;\n\n    /** auto create if not exist */\n    @Input({ transform: booleanAttribute }) autoCreate = false;\n\n    /** no template for label selection */\n    @Input({ transform: booleanAttribute }) noLabelTemplate = false;\n\n    /** use it for change the pattern of the filter search */\n    @Input() editPattern: (str: string) => string;\n\n    /** template(s) for formatting */\n    @Input() templates: TemplateRef<any> | { [key: string]: TemplateRef<any> };\n\n    /** template for formatting selected option */\n    @Input() templateSelection: TemplateRef<any>;\n\n    /** the max height of the results container when opening the select */\n    @Input() resultMaxHeight = '200px';\n\n    /** Active Search event */\n    @Input({ transform: booleanAttribute }) customSearchEnabled = false;\n\n    /** minimal data of show the search field */\n    @Input({ transform: numberAttribute })\n    get minCountForSearch(): number {\n        return this._minCountForSearch;\n    }\n    set minCountForSearch(value: number) {\n        this._minCountForSearch = value;\n        this.updateSearchBox();\n    }\n\n    /** Unique id of the element. */\n    @Input()\n    @HostBinding('id')\n    get id() {\n        return this._id;\n    }\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /** Whether the element is required. */\n    @Input({ transform: booleanAttribute }) required = false;\n\n    /** Whether selected items should be hidden. */\n    @Input({ transform: booleanAttribute })\n    get disabled() {\n        return this._control ? this._control.disabled : this._disabled;\n    }\n    set disabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    /** Whether items are hidden when has. */\n    @Input({ transform: booleanAttribute }) hideSelectedItems = false;\n\n    /** Whether the element is readonly. */\n    @Input({ transform: booleanAttribute }) readonly = false;\n\n    /** The input element's value. */\n    @Input()\n    get value() {\n        return this._value;\n    }\n    set value(value: Select2UpdateValue) {\n        if (this.testValueChange(this._value, value)) {\n            setTimeout(() => {\n                if (this._value === undefined) {\n                    this._value = value ?? null;\n                }\n                this.writeValue(value ?? null);\n            }, 10);\n        }\n    }\n\n    /** Tab index for the select2 element. */\n    @Input({ transform: numberAttribute })\n    get tabIndex(): number {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value: number) {\n        this._tabIndex = value;\n    }\n\n    /** reset with no selected value */\n    @Input({ transform: booleanAttribute })\n    resettable = false;\n\n    /** selected value when × is clicked */\n    @Input() resetSelectedValue: any;\n\n    /** grid: item by line\n     * * 0 = no grid\n     * * number = item by line (4)\n     * * string = minimal size item (100px)\n     */\n    @Input() grid = '';\n\n    @Output() update = new EventEmitter<Select2UpdateEvent<Select2UpdateValue>>();\n    @Output() autoCreateItem = new EventEmitter<Select2AutoCreateEvent<Select2UpdateValue>>();\n    @Output() open = new EventEmitter<Select2>();\n    @Output() close = new EventEmitter<Select2>();\n    @Output() focus = new EventEmitter<Select2>();\n    @Output() blur = new EventEmitter<Select2>();\n    @Output() search = new EventEmitter<Select2SearchEvent<Select2UpdateValue>>();\n    @Output() scroll = new EventEmitter<Select2ScrollEvent>();\n    @Output() removeOption = new EventEmitter<Select2RemoveEvent<Select2UpdateValue>>();\n\n    option: Select2Option | Select2Option[] | null = null;\n    isOpen = false;\n    searchStyle: string;\n\n    /** Whether the element is focused or not. */\n    focused = false;\n\n    filteredData: Select2Data;\n\n    get select2Options() {\n        return this.multiple ? (this.option as Select2Option[]) : null;\n    }\n\n    get select2Option() {\n        return this.multiple ? null : (this.option as Select2Option);\n    }\n\n    get searchText() {\n        return this.innerSearchText;\n    }\n\n    set searchText(text: string) {\n        this.innerSearchText = text;\n    }\n\n    @HostBinding('attr.aria-invalid')\n    get ariaInvalid(): boolean {\n        return this._isErrorState();\n    }\n\n    @HostBinding('class.material')\n    get classMaterial(): boolean {\n        return this.styleMode === 'material';\n    }\n\n    @HostBinding('class.nostyle')\n    get classNostyle(): boolean {\n        return this.styleMode === 'noStyle';\n    }\n\n    @HostBinding('class.borderless')\n    get classBorderless(): boolean {\n        return this.styleMode === 'borderless';\n    }\n\n    @HostBinding('class.select2-above')\n    get select2above(): boolean {\n        return !this.overlay ? this.listPosition === 'above' : this._isAbobeOverlay();\n    }\n\n    overlayWidth: number;\n    overlayHeight: number;\n    _triggerRect: DOMRect;\n    _dropdownRect: DOMRect;\n\n    get _positions(): ConnectedPosition[] {\n        return this.listPosition === 'auto' ? undefined : null;\n    }\n\n    maxResultsExceeded: boolean;\n\n    private _minCountForSearch?: number;\n\n    @ViewChild(CdkConnectedOverlay) private cdkConnectedOverlay: CdkConnectedOverlay;\n    @ViewChild('selection', { static: true }) private selection: ElementRef<HTMLElement>;\n    @ViewChild('results') private resultContainer: ElementRef<HTMLElement>;\n    @ViewChildren('result') private results: QueryList<ElementRef>;\n    @ViewChild('searchInput') private searchInput: ElementRef<HTMLElement>;\n    @ViewChild('dropdown') private dropdown: ElementRef<HTMLElement>;\n\n    private hoveringValue: Select2Value | null | undefined = null;\n    private innerSearchText = '';\n    private isSearchboxHidden: boolean;\n\n    private selectionElement: HTMLElement;\n\n    private get resultsElement(): HTMLElement {\n        return this.resultContainer?.nativeElement;\n    }\n\n    private _stateChanges = new Subject<void>();\n\n    /** Tab index for the element. */\n    private _tabIndex: number;\n\n    private _disabled = false;\n    private _multiple = false;\n    private _id: string;\n    private _uid = `select2-${nextUniqueId++}`;\n    private _value: Select2UpdateValue = null;\n    private _previousNativeValue: Select2UpdateValue;\n    private _overlayPosition: VerticalConnectionPos;\n\n    constructor(\n        protected _viewportRuler: ViewportRuler,\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Optional() private _parentForm: NgForm,\n        @Optional() private _parentFormGroup: FormGroupDirective,\n        @Self() @Optional() public _control: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n    ) {\n        // eslint-disable-next-line no-self-assign\n        this.id = this.id;\n        this._tabIndex = parseInt(tabIndex, 10) || 0;\n\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n    }\n\n    @HostListener('document:click', ['$event'])\n    clickDetection(e: MouseEvent) {\n        if (this.isOpen && focus) {\n            const target = e.target as HTMLElement;\n            if (!this.ifParentContainsClass(target, 'selection')) {\n                if (!this.ifParentContainsClass(target, 'select2-dropdown')) {\n                    this.toggleOpenAndClose();\n                }\n                if (!this.overlay && !this.ifParentContainsId(target, this._id)) {\n                    this.clickExit();\n                }\n            } else if (!this.ifParentContainsId(target, this._id)) {\n                this.toggleOpenAndClose();\n                this.clickExit();\n            }\n        } else if (this.focused) {\n            const target = e.target as HTMLElement;\n            this._focus(this.clickOnSelect2Element(target));\n        }\n    }\n\n    /** View -> model callback called when select has been touched */\n    private _onTouched = () => {\n        // do nothing\n    };\n\n    /** View -> model callback called when value changes */\n    private _onChange: (value: any) => void = () => {\n        // do nothing\n    };\n\n    ngOnInit() {\n        this._viewportRuler.change(100).subscribe(() => {\n            if (this.isOpen) {\n                this.triggerRect();\n            }\n        });\n\n        const option = Select2Utils.getOptionsByValue(\n            this._data,\n            this._control ? this._control.value : this.value,\n            this.multiple,\n        );\n        if (option !== null) {\n            this.option = option;\n        }\n        if (!Array.isArray(option)) {\n            this.hoveringValue = this.value as string | undefined;\n        }\n        this.updateSearchBox();\n    }\n\n    ngAfterViewInit() {\n        this.cdkConnectedOverlay.positionChange.subscribe((posChange: ConnectedOverlayPositionChange) => {\n            if (\n                this.listPosition === 'auto' &&\n                posChange.connectionPair?.originY &&\n                this._overlayPosition !== posChange.connectionPair.originY\n            ) {\n                this.triggerRect();\n                this._overlayPosition = posChange.connectionPair.originY;\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n\n        this.selectionElement = this.selection.nativeElement;\n        this.triggerRect();\n    }\n\n    ngDoCheck() {\n        this.updateSearchBox();\n        this._dirtyCheckNativeValue();\n        if (this._triggerRect) {\n            if (this.overlayWidth !== this._triggerRect.width) {\n                this.overlayWidth = this._triggerRect.width;\n            }\n            if (this._dropdownRect?.height > 0 && this.overlayHeight !== this._dropdownRect.height) {\n                this.overlayHeight = this.listPosition === 'auto' ? this._dropdownRect.height : 0;\n            }\n        }\n    }\n\n    updateSearchBox() {\n        const hidden = this.customSearchEnabled\n            ? false\n            : Select2Utils.isSearchboxHiddex(this._data, this._minCountForSearch);\n        if (this.isSearchboxHidden !== hidden) {\n            this.isSearchboxHidden = hidden;\n        }\n    }\n\n    hideSearch(): boolean {\n        const displaySearchStatus =\n            displaySearchStatusList.indexOf(this.displaySearchStatus) > -1 ? this.displaySearchStatus : 'default';\n        return (displaySearchStatus === 'default' && this.isSearchboxHidden) || displaySearchStatus === 'hidden';\n    }\n\n    getOptionStyle(option: Select2Option) {\n        return (\n            'select2-results__option ' +\n            (option.hide ? 'select2-results__option--hide ' : '') +\n            (option.value === this.hoveringValue ? 'select2-results__option--highlighted ' : '') +\n            (option.classes || '')\n        );\n    }\n\n    mouseenter(option: Select2Option) {\n        if (!option.disabled) {\n            this.hoveringValue = option.value;\n        }\n    }\n\n    click(option: Select2Option) {\n        if (this.testSelection(option)) {\n            this.select(option);\n        }\n    }\n\n    reset(event?: MouseEvent) {\n        // const test = Select2Utils.getOptionByValue(this._data, this.resetSelectedValue);\n        // debugger;\n        this.select(\n            this.resetSelectedValue !== undefined\n                ? (Select2Utils.getOptionByValue(this._data, this.resetSelectedValue) ?? null)\n                : null,\n        );\n\n        if (event) {\n            this.stopEvent(event);\n        }\n    }\n\n    prevChange(event: Event) {\n        event.stopPropagation();\n    }\n\n    stopEvent(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    toggleOpenAndClose(focus = true, open?: boolean, event?: KeyboardEvent) {\n        if (this.disabled) {\n            return;\n        }\n        this._focus(focus);\n\n        const changeEmit = this.isOpen !== (open ?? !this.isOpen);\n        this.isOpen = open ?? !this.isOpen;\n\n        if (this.isOpen) {\n            if (!this.isSearchboxHidden) {\n                this.innerSearchText = '';\n                this.updateFilteredData();\n                this._focusSearchboxOrResultsElement(focus);\n            }\n\n            if (this.isSearchboxHidden && !changeEmit && event) {\n                this.keyDown(event);\n            } else {\n                setTimeout(() => {\n                    if (this.option) {\n                        const option = Array.isArray(this.option) ? this.option[0] : this.option;\n                        this.updateScrollFromOption(option);\n                    } else if (this.resultsElement) {\n                        this.resultsElement.scrollTop = 0;\n                    }\n                    setTimeout(() => {\n                        this.triggerRect();\n                        this.cdkConnectedOverlay?.overlayRef?.updatePosition();\n                    }, 100);\n                });\n            }\n            if (changeEmit) {\n                this.open.emit(this);\n            }\n        } else if (changeEmit) {\n            this.close.emit(this);\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    hasTemplate(option: Select2Option | Select2Group, defaultValue: string, select: boolean = false) {\n        return (\n            (select\n                ? this.templates?.[(option as Select2Option).templateSelectionId] instanceof TemplateRef ||\n                  this.templates?.[`${defaultValue}Selection`] instanceof TemplateRef ||\n                  this.templates?.[`templateSelection`] instanceof TemplateRef ||\n                  this.templateSelection instanceof TemplateRef\n                : false) ||\n            this.templates?.[option.templateId] instanceof TemplateRef ||\n            this.templates?.[defaultValue] instanceof TemplateRef ||\n            this.templates?.['template'] instanceof TemplateRef ||\n            this.templates instanceof TemplateRef ||\n            false\n        );\n    }\n\n    getTemplate(option: Select2Option | Select2Group, defaultValue: string, select: boolean = false) {\n        return this.hasTemplate(option, defaultValue, select)\n            ? (select\n                  ? this.templates?.[(option as Select2Option).templateSelectionId] ||\n                    this.templates?.[`${defaultValue}Selection`] ||\n                    this.templates?.[`templateSelection`] ||\n                    this.templateSelection\n                  : undefined) ||\n                  this.templates?.[option.templateId] ||\n                  this.templates?.[defaultValue] ||\n                  this.templates?.['template'] ||\n                  this.templates\n            : undefined;\n    }\n\n    triggerRect() {\n        this._triggerRect = this.selectionElement.getBoundingClientRect();\n        this._dropdownRect = this.dropdown?.nativeElement\n            ? this.dropdown.nativeElement.getBoundingClientRect()\n            : undefined;\n    }\n\n    isNumber(o: any): boolean {\n        return !isNaN(o - 0) && o !== null && o !== '' && o !== false;\n    }\n\n    private testSelection(option: Select2Option) {\n        if (option.disabled) {\n            return false;\n        }\n\n        return (\n            !this.multiple ||\n            !this.limitSelection ||\n            (Array.isArray(this._value) && this._value.length < this.limitSelection)\n        );\n    }\n\n    private testValueChange(value1: Select2UpdateValue, value2: Select2UpdateValue) {\n        if (\n            ((value1 === null || value1 === undefined) && (value2 === null || value2 === undefined)) ||\n            value1 === value2\n        ) {\n            return false;\n        }\n        if (\n            this.multiple &&\n            (value1 as Select2Value[])?.length &&\n            (value2 as Select2Value[])?.length &&\n            (value1 as Select2Value[]).length === (value2 as Select2Value[]).length\n        ) {\n            for (const e1 of value1 as Select2Value[]) {\n                const test = (value2 as Select2Value[]).indexOf(e1) > -1;\n                if (!test) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n\n    private updateFilteredData(writeValue = false) {\n        setTimeout(() => {\n            let result = this._data;\n            if (this.multiple && this.hideSelectedItems) {\n                result = Select2Utils.getFilteredSelectedData(result, this.option);\n            }\n\n            if (!this.customSearchEnabled && this.searchText && this.searchText.length >= +this.minCharForSearch) {\n                result = Select2Utils.getFilteredData(result, this.searchText, this.editPattern);\n            }\n\n            if (this.maxResults > 0) {\n                const data = Select2Utils.getReduceData(result, +this.maxResults);\n                result = data.result;\n                this.maxResultsExceeded = data.reduce;\n            } else {\n                this.maxResultsExceeded = false;\n            }\n\n            if (Select2Utils.valueIsNotInFilteredData(result, this.hoveringValue)) {\n                this.hoveringValue = Select2Utils.getFirstAvailableOption(result);\n            }\n\n            if (writeValue && this._previousNativeValue !== this._value) {\n                // refresh current selected value\n                this.writeValue(this._control ? this._control.value : this._value);\n            }\n\n            this.filteredData = result;\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    private clickExit() {\n        this._focus(false);\n    }\n\n    private ifParentContainsClass(element: HTMLElement, cssClass: string): boolean {\n        return this.getParentElementByClass(element, cssClass) !== null;\n    }\n\n    private ifParentContainsId(element: HTMLElement, id: string): boolean {\n        return this.getParentElementById(element, id) !== null;\n    }\n\n    private getParentElementByClass(element: HTMLElement, cssClass: string): HTMLElement | null {\n        return this.containClasses(element, cssClass.trim().split(/\\s+/))\n            ? element\n            : element.parentElement\n              ? this.getParentElementByClass(element.parentElement, cssClass)\n              : null;\n    }\n\n    private getParentElementById(element: HTMLElement, id: string): HTMLElement | null {\n        return element.id === id\n            ? element\n            : element.parentElement\n              ? this.getParentElementById(element.parentElement, id)\n              : null;\n    }\n\n    private containClasses(element: HTMLElement, cssClasses: string[]): boolean {\n        if (!element.classList) {\n            return false;\n        }\n\n        for (const cssClass of cssClasses) {\n            if (!element.classList.contains(cssClass)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private containAlmostOneClasses(element: HTMLElement, cssClasses: string[]): boolean {\n        if (!element.classList) {\n            return false;\n        }\n\n        let containAlmostOne = false;\n        for (const cssClass of cssClasses) {\n            if (element.classList.contains(cssClass)) {\n                containAlmostOne = true;\n            }\n        }\n\n        return containAlmostOne;\n    }\n\n    private clickOnSelect2Element(element: HTMLElement): boolean {\n        return this.containAlmostOneClasses(element, [\n            'select2-overlay-backdrop',\n            'select2-label-content',\n            'select2-selection__rendered',\n            'select2-results__option',\n        ]);\n    }\n\n    focusin() {\n        if (!this.disabled) {\n            this._focus(true);\n        }\n    }\n\n    focusout() {\n        if (this.selectionElement && !this.selectionElement.classList.contains('select2-focused')) {\n            this._focus(false);\n            this._onTouched();\n        }\n    }\n\n    select(option: Select2Option | null, emit: boolean = true) {\n        let value: any;\n        if (option !== null && option !== undefined) {\n            if (this.multiple) {\n                const options = this.option as Select2Option[];\n                const index = options.findIndex(op => op.value === option.value);\n                if (index === -1) {\n                    options.push(option);\n                } else {\n                    options.splice(index, 1);\n                }\n\n                value = (this.option as Select2Option[]).map(op => op.value);\n            } else {\n                this.option = option;\n                if (this.isOpen) {\n                    this.isOpen = false;\n                    this.close.emit(this);\n                    this.selectionElement?.focus();\n                }\n                value = this.option.value;\n                if (!option && this._value === null) {\n                    this._value = value ?? null;\n                }\n            }\n        } else {\n            // when remove value\n            if (Array.isArray(this.option) ? this.option?.length : this.option) {\n                value = '';\n            }\n            this.option = null;\n        }\n\n        if (this.multiple && this.hideSelectedItems) {\n            this.updateFilteredData();\n        }\n\n        emit &&= value !== undefined && this.testDiffValue(this._value, value);\n\n        if (this._control) {\n            this._onChange(value);\n        }\n\n        if (emit) {\n            this._value = value ?? null;\n            setTimeout(() => {\n                this.update.emit({\n                    component: this,\n                    value: this._value,\n                    options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,\n                });\n            });\n        }\n    }\n\n    private testDiffValue(val1: Select2UpdateValue, val2: any) {\n        return Array.isArray(val1) ? (val1 as [])?.length !== val2?.length : val1 !== val2;\n    }\n\n    keyDown(event: KeyboardEvent, create = false) {\n        if (create && this._testKey(event, ['Enter', 13])) {\n            this.createAndAdd(event);\n        } else if (this._testKey(event, ['ArrowDown', 40])) {\n            this.moveDown();\n            event.preventDefault();\n        } else if (this._testKey(event, ['ArrowUp', 38])) {\n            this.moveUp();\n            event.preventDefault();\n        } else if (this._testKey(event, ['Enter', 13])) {\n            this.selectByEnter();\n            event.preventDefault();\n        } else if (this._testKey(event, ['Escape', 'Tab', 9, 27]) && this.isOpen) {\n            this.toggleOpenAndClose();\n            this._focus(false);\n        }\n    }\n\n    openKey(event: KeyboardEvent, create = false) {\n        if (create && this._testKey(event, ['Enter', 13])) {\n            this.createAndAdd(event);\n        } else if (this._testKey(event, ['ArrowDown', 'ArrowUp', 'Enter', 40, 38, 13])) {\n            this.toggleOpenAndClose(true, true, event);\n            event.preventDefault();\n        } else if (this._testKey(event, ['Escape', 'Tab', 9, 27])) {\n            if (this.isOpen) {\n                this.toggleOpenAndClose(false);\n                this._onTouched();\n                event.preventDefault();\n            } else {\n                this._focus(false);\n            }\n        }\n    }\n\n    searchUpdate(e: Event) {\n        this.searchText = (e.target as HTMLInputElement).value;\n        if (!this.customSearchEnabled) {\n            this.updateFilteredData();\n        } else {\n            this.search.emit({\n                component: this,\n                value: this._value,\n                search: this.searchText,\n                data: this._data,\n                filteredData: (data: Select2Data) => {\n                    this.filteredData = data;\n                    this._changeDetectorRef.markForCheck();\n                },\n            });\n        }\n    }\n\n    trackBy(_index: number, item: Select2Option): any {\n        return item.value;\n    }\n\n    isSelected(option: Select2Option) {\n        return Select2Utils.isSelected(this.option, option, this.multiple);\n    }\n\n    isDisabled(option: Select2Option) {\n        return option.disabled ? 'true' : 'false';\n    }\n\n    removeSelection(e: MouseEvent | KeyboardEvent, option: Select2Option) {\n        Select2Utils.removeSelection(this.option, option);\n\n        if (this.multiple && this.hideSelectedItems) {\n            this.updateFilteredData();\n        }\n\n        const value = (this.option as Select2Option[]).map(op => op.value);\n\n        if (this._control) {\n            this._onChange(value);\n        } else {\n            this._value = value ?? null;\n        }\n\n        this.update.emit({\n            component: this,\n            value: value,\n            options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,\n        });\n        this.removeOption.emit({\n            component: this,\n            value: value,\n            removedOption: option,\n        });\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.isOpen) {\n            this._focusSearchboxOrResultsElement();\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value: any) {\n        this._setSelectionByValue(value);\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    onScroll(way: 'up' | 'down') {\n        this.scroll.emit({\n            component: this,\n            way,\n            search: this.innerSearchText,\n            data: this._data,\n        });\n    }\n\n    _isErrorState(): boolean {\n        const isInvalid = this._control?.invalid;\n        const isTouched = this._control?.touched;\n        const isSubmitted = this._parentFormGroup?.submitted || this._parentForm?.submitted;\n        return !!(isInvalid && (isTouched || isSubmitted));\n    }\n\n    private addItem(value: string): Select2Option {\n        let item = Select2Utils.getOptionByValue(this._data, value);\n        if (!item) {\n            item = {\n                value,\n                label: value,\n            };\n            this._data.push(item);\n        }\n        return item;\n    }\n\n    private createAndAdd(e: KeyboardEvent) {\n        const value = (e.target as HTMLInputElement).value;\n        if (value.trim()) {\n            const item = this.addItem(value.trim());\n            this.click(item);\n            (e.target as HTMLInputElement).value = '';\n            this.autoCreateItem.emit({\n                value: item,\n                component: this,\n                options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,\n            });\n        }\n        this.stopEvent(e);\n    }\n\n    private moveUp() {\n        this.updateScrollFromOption(Select2Utils.getPreviousOption(this.filteredData, this.hoveringValue));\n    }\n\n    private moveDown() {\n        this.updateScrollFromOption(Select2Utils.getNextOption(this.filteredData, this.hoveringValue));\n    }\n\n    private updateScrollFromOption(option: Select2Option) {\n        if (option) {\n            this.hoveringValue = option.value;\n            const domElement = this.results.find(r => r.nativeElement.innerText.trim() === option.label);\n            if (domElement && this.resultsElement) {\n                this.resultsElement.scrollTop = 0;\n                const listClientRect = this.resultsElement.getBoundingClientRect();\n                const optionClientRect = domElement.nativeElement.getBoundingClientRect();\n                this.resultsElement.scrollTop = optionClientRect.top - listClientRect.top;\n            }\n        }\n    }\n\n    private selectByEnter() {\n        if (this.hoveringValue) {\n            const option = Select2Utils.getOptionByValue(this._data, this.hoveringValue);\n            this.select(option);\n        }\n    }\n\n    private _testKey(event: KeyboardEvent, refs: (number | string)[] = []): boolean {\n        return this._isKey(this._getKey(event), refs);\n    }\n\n    private _getKey(event: KeyboardEvent): number | string {\n        let code: number | string;\n\n        if (event.key !== undefined) {\n            code = event.key;\n        } else if (event['keyIdentifier'] !== undefined) {\n            code = event['keyIdentifier'];\n        } else if (event['keyCode'] !== undefined) {\n            code = event['keyCode'];\n        } else {\n            event.preventDefault();\n        }\n\n        return code;\n    }\n\n    private _isKey(code: number | string, refs: (number | string)[] = []): boolean {\n        return refs && refs.length > 0 ? refs.indexOf(code) !== -1 : false;\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.option || (value !== undefined && value !== null)) {\n            const isArray = Array.isArray(value);\n            if (this.multiple && value && !isArray) {\n                throw new Error('Non array value.');\n            } else if (this._data) {\n                if (this.multiple) {\n                    this.option = []; // if value is null, then empty option and return\n                    if (isArray) {\n                        // value is not null. Preselect value\n                        const selectedValues: any = Select2Utils.getOptionsByValue(this._data, value, this.multiple);\n                        selectedValues.map(item => this.select(item, false));\n                        this._value ??= value;\n\n                        if (this.testDiffValue(this._value, value)) {\n                            this.update.emit({\n                                component: this,\n                                value: value,\n                                options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,\n                            });\n                        }\n                    } else if (value === null) {\n                        // fix if value is null\n                        this.value = [];\n                        this.reset();\n                        this.select(null, false);\n\n                        if (this.testDiffValue(this._value, value)) {\n                            this._value = [];\n                            this.update.emit({\n                                component: this,\n                                value: this._value,\n                                options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,\n                            });\n                        }\n                    }\n                } else {\n                    this._value ??= value;\n                    this.select(Select2Utils.getOptionByValue(this._data, value));\n                }\n            } else if (this._control) {\n                this._control.viewToModelUpdate(value);\n            }\n\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this._stateChanges.next();\n        }\n    }\n\n    private _focusSearchboxOrResultsElement(focus = true) {\n        if (!this.isSearchboxHidden) {\n            setTimeout(() => {\n                if (this.searchInput && this.searchInput.nativeElement && focus) {\n                    this.searchInput.nativeElement.focus();\n                }\n            });\n            if (this.resultsElement && focus) {\n                this.resultsElement.focus();\n            }\n        }\n    }\n\n    private _focus(state: boolean) {\n        if (!state && this.focused) {\n            this.focused = state;\n            this.blur.emit(this);\n        } else if (state && !this.focused) {\n            this.focused = state;\n            this.focus.emit(this);\n        }\n    }\n\n    private _isAbobeOverlay(): boolean {\n        return this.overlay && this._overlayPosition && this.listPosition === 'auto'\n            ? this._overlayPosition === 'top'\n            : this.listPosition === 'above';\n    }\n}\n","<div class=\"select2-label\" (click)=\"toggleOpenAndClose()\">\n    <ng-content select=\"select2-label\"></ng-content>\n    @if (required) {\n        <span class=\"select2-required\"></span>\n    }\n</div>\n\n<div\n    class=\"select2 select2-container select2-container--default\"\n    [class.select2-container--focus]=\"focused\"\n    [class.select2-container--below]=\"!select2above\"\n    [class.select2-container--above]=\"select2above\"\n    [class.select2-container--open]=\"isOpen\"\n    [class.select2-container--disabled]=\"disabled\"\n>\n    <div\n        class=\"selection\"\n        #selection\n        #trigger=\"cdkOverlayOrigin\"\n        [tabindex]=\"!this.isOpen ? tabIndex : '-1'\"\n        (click)=\"toggleOpenAndClose()\"\n        (focus)=\"focusin()\"\n        (blur)=\"focusout()\"\n        (keydown)=\"openKey($event)\"\n        cdkOverlayOrigin\n        [class.select2-focused]=\"focused\"\n    >\n        <div\n            class=\"select2-selection\"\n            [class.select2-selection--multiple]=\"multiple\"\n            [class.select2-selection--single]=\"!multiple\"\n            role=\"combobox\"\n        >\n            @if (!multiple) {\n                <span class=\"select2-selection__rendered\" [title]=\"select2Option?.label || ''\">\n                    @if (!select2Option) {\n                        <span>&nbsp;</span>\n                    }\n                    @if (select2Option) {\n                        @if (!hasTemplate(select2Option, 'option', true) || noLabelTemplate) {\n                            <span [innerHTML]=\"select2Option.label\"></span>\n                        } @else {\n                            <ng-container\n                                *ngTemplateOutlet=\"getTemplate(select2Option, 'option', true); context: select2Option\"\n                            ></ng-container>\n                        }\n                    }\n                    <span\n                        [class.select2-selection__placeholder__option]=\"option\"\n                        class=\"select2-selection__placeholder\"\n                        >{{ placeholder }}</span\n                    >\n                </span>\n            }\n            @if (!multiple && resettable && resetSelectedValue !== value && select2Option && !(disabled || readonly)) {\n                <span (click)=\"reset($event)\" class=\"select2-selection__reset\" role=\"presentation\">×</span>\n            }\n            @if (!multiple) {\n                <span class=\"select2-selection__arrow\" role=\"presentation\"> </span>\n            }\n            @if (multiple) {\n                <ul class=\"select2-selection__rendered\">\n                    @if (!autoCreate) {\n                        <span\n                            [class.select2-selection__placeholder__option]=\"select2Options?.length > 0\"\n                            class=\"select2-selection__placeholder\"\n                            >{{ placeholder }}</span\n                        >\n                    }\n                    @for (op of option || []; track trackBy($index, op)) {\n                        <li\n                            class=\"select2-selection__choice\"\n                            [title]=\"op.label\"\n                            tabindex=\"0\"\n                            (keydown.enter)=\"removeSelection($event, op)\"\n                        >\n                            @if (!(disabled || readonly)) {\n                                <span\n                                    (click)=\"removeSelection($event, op)\"\n                                    class=\"select2-selection__choice__remove\"\n                                    role=\"presentation\"\n                                    >×</span\n                                >\n                            }\n                            @if (!hasTemplate(op, 'option', true) || noLabelTemplate) {\n                                <span [innerHTML]=\"op.label\"></span>\n                            } @else {\n                                <ng-container\n                                    *ngTemplateOutlet=\"getTemplate(op, 'option', true); context: op\"\n                                ></ng-container>\n                            }\n                        </li>\n                    }\n                    @if (autoCreate) {\n                        <li\n                            class=\"select2-selection__auto-create\"\n                            (focus)=\"stopEvent($event)\"\n                            (blur)=\"stopEvent($event)\"\n                        >\n                            <input\n                                [id]=\"id + '-create-field'\"\n                                (click)=\"toggleOpenAndClose(false, true); stopEvent($event)\"\n                                (keydown)=\"keyDown($event, true)\"\n                                (keyup)=\"searchUpdate($event)\"\n                                (change)=\"prevChange($event)\"\n                                class=\"select2-create__field\"\n                                type=\"search\"\n                                role=\"textbox\"\n                                autocomplete=\"off\"\n                                autocorrect=\"off\"\n                                autocapitalize=\"off\"\n                                spellcheck=\"false\"\n                            />\n                        </li>\n                    }\n                </ul>\n            }\n        </div>\n    </div>\n    @if (!overlay) {\n        <ng-container *ngTemplateOutlet=\"containerTemplate\"></ng-container>\n    }\n\n    <div class=\"select2-subscript-wrapper\">\n        <ng-content select=\"select2-hint\"></ng-content>\n    </div>\n</div>\n\n<ng-template\n    cdkConnectedOverlay\n    cdkConnectedOverlayHasBackdrop\n    cdkConnectedOverlayBackdropClass=\"select2-overlay-backdrop\"\n    [cdkConnectedOverlayOrigin]=\"trigger\"\n    [cdkConnectedOverlayOpen]=\"this.isOpen && overlay\"\n    [cdkConnectedOverlayMinWidth]=\"overlayWidth\"\n    [cdkConnectedOverlayHeight]=\"overlayHeight\"\n    [cdkConnectedOverlayPositions]=\"_positions\"\n    (backdropClick)=\"toggleOpenAndClose()\"\n>\n    <ng-container *ngTemplateOutlet=\"containerTemplate\"></ng-container>\n</ng-template>\n\n<ng-template #containerTemplate>\n    <div\n        class=\"select2-container select2-container--default select2-container-dropdown\"\n        [class.select2-container--open]=\"isOpen\"\n        [class.select2-overlay]=\"overlay\"\n        [class.select2-position-auto]=\"listPosition === 'auto'\"\n        [class.select2-style-borderless]=\"styleMode === 'borderless'\"\n    >\n        <div\n            #dropdown\n            class=\"select2-dropdown\"\n            [class.select2-dropdown--below]=\"!select2above\"\n            [class.select2-dropdown--above]=\"select2above\"\n        >\n            <div class=\"select2-search select2-search--dropdown\" [class.select2-search--hide]=\"hideSearch()\">\n                <input\n                    #searchInput\n                    [id]=\"id + '-search-field'\"\n                    [value]=\"searchText\"\n                    (keydown)=\"keyDown($event, autoCreate)\"\n                    (keyup)=\"searchUpdate($event)\"\n                    (change)=\"prevChange($event)\"\n                    class=\"select2-search__field\"\n                    type=\"search\"\n                    role=\"textbox\"\n                    autocomplete=\"off\"\n                    autocorrect=\"off\"\n                    autocapitalize=\"off\"\n                    spellcheck=\"false\"\n                    [attr.tabindex]=\"this.isOpen ? tabIndex : '-1'\"\n                />\n            </div>\n            <div class=\"select2-results\">\n                <ul\n                    #results\n                    class=\"select2-results__options\"\n                    [class.select2-grid]=\"grid && isNumber(grid)\"\n                    [class.select2-grid-auto]=\"grid && !isNumber(grid)\"\n                    [style.max-height]=\"resultMaxHeight\"\n                    [style.--grid-size]=\"grid || null\"\n                    role=\"tree\"\n                    tabindex=\"-1\"\n                    infiniteScroll\n                    [infiniteScrollDisabled]=\"!infiniteScroll && !isOpen\"\n                    [infiniteScrollDistance]=\"infiniteScrollDistance\"\n                    [infiniteScrollThrottle]=\"infiniteScrollThrottle\"\n                    [infiniteScrollContainer]=\"results\"\n                    (scrolled)=\"onScroll('down')\"\n                    (scrolledUp)=\"onScroll('up')\"\n                    (keydown)=\"keyDown($event)\"\n                >\n                    @for (groupOrOption of filteredData; track trackBy(i, groupOrOption); let i = $index) {\n                        @if (groupOrOption.options !== undefined) {\n                            <li class=\"select2-results__option\" role=\"group\">\n                                @if (!hasTemplate(groupOrOption, 'group')) {\n                                    <strong\n                                        [attr.class]=\"\n                                            'select2-results__group' +\n                                            (groupOrOption.classes ? ' ' + groupOrOption.classes : '')\n                                        \"\n                                        [innerHTML]=\"groupOrOption.label\"\n                                    ></strong>\n                                } @else {\n                                    <ng-container\n                                        *ngTemplateOutlet=\"getTemplate(groupOrOption, 'group'); context: groupOrOption\"\n                                    >\n                                    </ng-container>\n                                }\n                                <ul class=\"select2-results__options select2-results__options--nested\">\n                                    @for (option of groupOrOption.options; track trackBy(j, option); let j = $index) {\n                                        <li\n                                            #result\n                                            [id]=\"option.id || id + '-option-' + i + '-' + j\"\n                                            [class]=\"getOptionStyle(option)\"\n                                            role=\"treeitem\"\n                                            [attr.aria-selected]=\"isSelected(option)\"\n                                            [attr.aria-disabled]=\"isDisabled(option)\"\n                                            (mouseenter)=\"mouseenter(option)\"\n                                            (click)=\"click(option)\"\n                                        >\n                                            @if (!hasTemplate(option, 'option')) {\n                                                <div class=\"select2-label-content\" [innerHTML]=\"option.label\"></div>\n                                            } @else {\n                                                <ng-container\n                                                    *ngTemplateOutlet=\"getTemplate(option, 'option'); context: option\"\n                                                >\n                                                </ng-container>\n                                            }\n                                        </li>\n                                    }\n                                </ul>\n                            </li>\n                        } @else {\n                            <li\n                                #result\n                                [id]=\"groupOrOption.id || id + '-option-' + i\"\n                                [class]=\"getOptionStyle(groupOrOption)\"\n                                role=\"treeitem\"\n                                [attr.aria-selected]=\"isSelected(groupOrOption)\"\n                                [attr.aria-disabled]=\"isDisabled(groupOrOption)\"\n                                (mouseenter)=\"mouseenter(groupOrOption)\"\n                                (click)=\"click(groupOrOption)\"\n                            >\n                                @if (!hasTemplate(groupOrOption, 'option')) {\n                                    <div [innerHTML]=\"groupOrOption.label\" class=\"select2-label-content\"></div>\n                                } @else {\n                                    <ng-container\n                                        *ngTemplateOutlet=\"getTemplate(groupOrOption, 'option'); context: groupOrOption\"\n                                    >\n                                    </ng-container>\n                                }\n                                <ng-template #li>\n                                    <ng-container\n                                        *ngTemplateOutlet=\"getTemplate(groupOrOption, 'option'); context: groupOrOption\"\n                                    >\n                                    </ng-container>\n                                </ng-template>\n                            </li>\n                        }\n                    }\n                    @if (!filteredData?.length && noResultMessage) {\n                        <li class=\"select2-no-result select2-results__option\" [innerHTML]=\"noResultMessage\"></li>\n                    }\n                    @if (maxResultsExceeded) {\n                        <li\n                            class=\"select2-too-much-result select2-results__option\"\n                            [innerHTML]=\"maxResultsMessage\"\n                        ></li>\n                    }\n                </ul>\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Directive } from '@angular/core';\n\n@Directive({ selector: 'select2-hint' })\nexport class Select2Hint {}\n","import { Directive } from '@angular/core';\n\n@Directive({ selector: 'select2-label' })\nexport class Select2Label {}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { Select2Hint } from './select2-hint.component';\nimport { Select2Label } from './select2-label.component';\nimport { Select2 } from './select2.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, OverlayModule, ReactiveFormsModule, InfiniteScrollModule],\n    declarations: [Select2Hint, Select2Label, Select2],\n    exports: [FormsModule, ReactiveFormsModule, Select2Hint, Select2Label, Select2],\n})\nexport class Select2Module {}\n","/*\n * Public API Surface of ng-select2-component\n */\n\nexport * from './lib/select2-interfaces';\nexport * from './lib/select2-const';\nexport * from './lib/select2.component';\nexport * from './lib/select2.component';\nexport * from './lib/select2-hint.component';\nexport * from './lib/select2-label.component';\nexport * from './lib/select2-utils';\nexport * from './lib/select2.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}